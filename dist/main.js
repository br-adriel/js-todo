(()=>{"use strict";var n={424:(n,e,r)=>{r.d(e,{Z:()=>s});var t=r(537),a=r.n(t),i=r(645),o=r.n(i)()(a());o.push([n.id,':root {\r\n  font-size: 16px;\r\n  --cor-1: #2f3a8f;\r\n  --cor-2: #fe7e6d;\r\n  --sombra: 0 0 0.5rem rgba(12, 16, 39, 0.3);\r\n  --sombra-leve: 0 0 0.3rem rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n* {\r\n  font-family: "Outfit", sans-serif;\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n  max-width: 100%;\r\n}\r\n\r\nbody {\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  background-color: #ededed;\r\n  gap: 1rem;\r\n}\r\n\r\np,\r\na,\r\ninput,\r\nlabel,\r\nbutton,\r\nspan,\r\nselect {\r\n  font-size: 1.2rem;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: inherit;\r\n  transition: 0.3s color;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\nform a {\r\n  color: var(--cor-1);\r\n}\r\n\r\nform a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\nform .form-ajuda {\r\n  font-size: 0.8rem;\r\n  color: rgba(0, 0, 0, 0.6);\r\n}\r\n\r\nform div {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.25rem;\r\n}\r\n\r\nbutton {\r\n  border: none;\r\n  background-color: var(--cor-1);\r\n  color: #fff;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.2rem;\r\n  border: 2px solid var(--cor-1);\r\n  cursor: pointer;\r\n  transition: 0.2s background;\r\n}\r\n\r\nbutton:hover {\r\n  color: var(--cor-1);\r\n  background-color: #fff;\r\n  border: 2px solid var(--cor-1);\r\n}\r\n\r\ninput,\r\nselect {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border: 2px #ddd dashed;\r\n  border-radius: 0.1rem;\r\n  transition: 0.2s border;\r\n}\r\n\r\ninput:focus,\r\nselect:focus {\r\n  border: 2px dashed var(--cor-1);\r\n  outline: none;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.8rem;\r\n}\r\n\r\nheader,\r\nfooter {\r\n  background: var(--cor-1);\r\n  padding: 1rem;\r\n  color: #fff;\r\n  width: 100%;\r\n  text-align: center;\r\n  box-shadow: var(--sombra);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\nheader h1 {\r\n  font-family: "Oleo Script", cursive;\r\n}\r\n\r\nmain {\r\n  flex-grow: 1;\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  padding: 0 1rem;\r\n}\r\n\r\nfooter {\r\n  gap: 1.5rem;\r\n}\r\n\r\nfooter i {\r\n  font-size: 1.3rem;\r\n}\r\n\r\nfooter .links {\r\n  color: #fff;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\nfooter a:hover {\r\n  color: #ddd;\r\n}\r\n\r\n.card {\r\n  padding: 1rem;\r\n  background: #fff;\r\n  box-shadow: var(--sombra-leve);\r\n  border-radius: 0.2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n  width: 95%;\r\n}\r\n\r\n.msg {\r\n  padding: 0.5rem;\r\n  border-radius: 0.2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #fff;\r\n  width: 100%;\r\n}\r\n\r\n.msg.sucesso {\r\n  background: #00856a;\r\n}\r\n\r\n.msg.aviso {\r\n  background: #fba609;\r\n}\r\n\r\n.msg.erro {\r\n  background: #b53471;\r\n}\r\n\r\n.msg p {\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n\r\n/* Página de login e c adastro */\r\nsection {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n#paginaInicial .card {\r\n  width: 100%;\r\n}\r\n\r\n/* Página inicial */\r\n.barraAcoes {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n#paginaInicial h3 {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n#paginaInicial .listas {\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1;\r\n  gap: 1rem;\r\n}\r\n\r\n#paginaInicial .conteudo {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  gap: 0.5rem;\r\n  flex-grow: 1;\r\n}\r\n\r\n#paginaInicial .listas .card .botoes {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.conteudo {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 0;\r\n}\r\n\r\n/* Página ver lista de tarefas */\r\n#paginaVerLista .tarefa {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n  gap: 0.5rem;\r\n}\r\n\r\n#paginaVerLista .tarefas {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n#paginaVerLista .texto {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  flex-grow: 1;\r\n}\r\n\r\n#paginaVerLista .tarefa button {\r\n  padding: 0.1rem;\r\n  background: none;\r\n  color: var(--cor-1);\r\n  border: none;\r\n}\r\n\r\n#paginaVerLista .tarefa button:hover {\r\n  padding: 0.1rem;\r\n}\r\n\r\n#paginaVerLista .data-tarefa {\r\n  font-size: 0.8rem;\r\n  color: var(--cor-1);\r\n}\r\n\r\n#paginaVerLista .concluida .data-tarefa {\r\n  color: #666;\r\n}\r\n\r\n#paginaVerLista .listagem-tarefas {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.bi-exclamation-diamond {\r\n  color: #fba609;\r\n  margin-left: 0.25rem;\r\n}\r\n\r\n#paginaVerLista .concluida .nome-tarefa {\r\n  text-decoration: line-through;\r\n}\r\n\r\n@media (min-width: 600px) {\r\n  .card {\r\n    width: 60%;\r\n  }\r\n\r\n  #paginaInicial .card {\r\n    width: 100%;\r\n  }\r\n\r\n  #paginaInicial .listas {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n}\r\n\r\n@media (min-width: 900px) {\r\n  .card {\r\n    width: 40%;\r\n  }\r\n\r\n  #paginaInicial .card {\r\n    width: 100%;\r\n  }\r\n\r\n  #paginaInicial .listas {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n}\r\n\r\n@media (min-width: 1280px) {\r\n  .card {\r\n    width: 30%;\r\n  }\r\n\r\n  #paginaInicial .card {\r\n    width: 100%;\r\n  }\r\n\r\n  #paginaInicial .listas {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n}\r\n',"",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"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",sourcesContent:[':root {\r\n  font-size: 16px;\r\n  --cor-1: #2f3a8f;\r\n  --cor-2: #fe7e6d;\r\n  --sombra: 0 0 0.5rem rgba(12, 16, 39, 0.3);\r\n  --sombra-leve: 0 0 0.3rem rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n* {\r\n  font-family: "Outfit", sans-serif;\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n  max-width: 100%;\r\n}\r\n\r\nbody {\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  background-color: #ededed;\r\n  gap: 1rem;\r\n}\r\n\r\np,\r\na,\r\ninput,\r\nlabel,\r\nbutton,\r\nspan,\r\nselect {\r\n  font-size: 1.2rem;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: inherit;\r\n  transition: 0.3s color;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\nform a {\r\n  color: var(--cor-1);\r\n}\r\n\r\nform a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\nform .form-ajuda {\r\n  font-size: 0.8rem;\r\n  color: rgba(0, 0, 0, 0.6);\r\n}\r\n\r\nform div {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.25rem;\r\n}\r\n\r\nbutton {\r\n  border: none;\r\n  background-color: var(--cor-1);\r\n  color: #fff;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.2rem;\r\n  border: 2px solid var(--cor-1);\r\n  cursor: pointer;\r\n  transition: 0.2s background;\r\n}\r\n\r\nbutton:hover {\r\n  color: var(--cor-1);\r\n  background-color: #fff;\r\n  border: 2px solid var(--cor-1);\r\n}\r\n\r\ninput,\r\nselect {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border: 2px #ddd dashed;\r\n  border-radius: 0.1rem;\r\n  transition: 0.2s border;\r\n}\r\n\r\ninput:focus,\r\nselect:focus {\r\n  border: 2px dashed var(--cor-1);\r\n  outline: none;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.8rem;\r\n}\r\n\r\nheader,\r\nfooter {\r\n  background: var(--cor-1);\r\n  padding: 1rem;\r\n  color: #fff;\r\n  width: 100%;\r\n  text-align: center;\r\n  box-shadow: var(--sombra);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\nheader h1 {\r\n  font-family: "Oleo Script", cursive;\r\n}\r\n\r\nmain {\r\n  flex-grow: 1;\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  padding: 0 1rem;\r\n}\r\n\r\nfooter {\r\n  gap: 1.5rem;\r\n}\r\n\r\nfooter i {\r\n  font-size: 1.3rem;\r\n}\r\n\r\nfooter .links {\r\n  color: #fff;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\nfooter a:hover {\r\n  color: #ddd;\r\n}\r\n\r\n.card {\r\n  padding: 1rem;\r\n  background: #fff;\r\n  box-shadow: var(--sombra-leve);\r\n  border-radius: 0.2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n  width: 95%;\r\n}\r\n\r\n.msg {\r\n  padding: 0.5rem;\r\n  border-radius: 0.2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #fff;\r\n  width: 100%;\r\n}\r\n\r\n.msg.sucesso {\r\n  background: #00856a;\r\n}\r\n\r\n.msg.aviso {\r\n  background: #fba609;\r\n}\r\n\r\n.msg.erro {\r\n  background: #b53471;\r\n}\r\n\r\n.msg p {\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n\r\n/* Página de login e c adastro */\r\nsection {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n#paginaInicial .card {\r\n  width: 100%;\r\n}\r\n\r\n/* Página inicial */\r\n.barraAcoes {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n#paginaInicial h3 {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n#paginaInicial .listas {\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1;\r\n  gap: 1rem;\r\n}\r\n\r\n#paginaInicial .conteudo {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  gap: 0.5rem;\r\n  flex-grow: 1;\r\n}\r\n\r\n#paginaInicial .listas .card .botoes {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.conteudo {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 0;\r\n}\r\n\r\n/* Página ver lista de tarefas */\r\n#paginaVerLista .tarefa {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n  gap: 0.5rem;\r\n}\r\n\r\n#paginaVerLista .tarefas {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n#paginaVerLista .texto {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  flex-grow: 1;\r\n}\r\n\r\n#paginaVerLista .tarefa button {\r\n  padding: 0.1rem;\r\n  background: none;\r\n  color: var(--cor-1);\r\n  border: none;\r\n}\r\n\r\n#paginaVerLista .tarefa button:hover {\r\n  padding: 0.1rem;\r\n}\r\n\r\n#paginaVerLista .data-tarefa {\r\n  font-size: 0.8rem;\r\n  color: var(--cor-1);\r\n}\r\n\r\n#paginaVerLista .concluida .data-tarefa {\r\n  color: #666;\r\n}\r\n\r\n#paginaVerLista .listagem-tarefas {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.bi-exclamation-diamond {\r\n  color: #fba609;\r\n  margin-left: 0.25rem;\r\n}\r\n\r\n#paginaVerLista .concluida .nome-tarefa {\r\n  text-decoration: line-through;\r\n}\r\n\r\n@media (min-width: 600px) {\r\n  .card {\r\n    width: 60%;\r\n  }\r\n\r\n  #paginaInicial .card {\r\n    width: 100%;\r\n  }\r\n\r\n  #paginaInicial .listas {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n}\r\n\r\n@media (min-width: 900px) {\r\n  .card {\r\n    width: 40%;\r\n  }\r\n\r\n  #paginaInicial .card {\r\n    width: 100%;\r\n  }\r\n\r\n  #paginaInicial .listas {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n}\r\n\r\n@media (min-width: 1280px) {\r\n  .card {\r\n    width: 30%;\r\n  }\r\n\r\n  #paginaInicial .card {\r\n    width: 100%;\r\n  }\r\n\r\n  #paginaInicial .listas {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n}\r\n'],sourceRoot:""}]);const s=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(t)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(o[d]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);t&&o[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(a," */"),o=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(o).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var i={},o=[],s=0;s<n.length;s++){var d=n[s],c=t.base?d[0]+t.base:d[0],l=i[c]||0,u="".concat(c," ").concat(l);i[c]=l+1;var m=r(u),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==m)e[m].references++,e[m].updater(A);else{var f=a(A,t);t.byIndex=s,e.splice(s,0,{identifier:u,updater:f,references:1})}o.push(u)}return o}function a(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,a){var i=t(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<i.length;o++){var s=r(i[o]);e[s].references--}for(var d=t(n,a),c=0;c<i.length;c++){var l=r(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=d}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,a&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var a=e[t];if(void 0!==a)return a.exports;var i=e[t]={id:t,exports:{}};return n[t](i,i.exports,r),i.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=r(379),e=r.n(n),t=r(795),a=r.n(t),i=r(569),o=r.n(i),s=r(565),d=r.n(s),c=r(216),l=r.n(c),u=r(589),m=r.n(u),A=r(424),f={};function p(n,e,r,t,a=[]){const i=document.createElement("div"),o=document.createElement("label");o.setAttribute("for",r),o.innerText=n;const s=document.createElement("input");s.setAttribute("type",e),s.setAttribute("id",r),a.map((n=>{s.setAttribute(n[0],n[1])}));const d=document.createElement("p");return d.innerText=t,d.classList.add("form-ajuda"),i.appendChild(o),i.appendChild(s),i.appendChild(d),i}function h(n,e){const r=document.createElement("button");return r.setAttribute("type",n),r.innerText=e,r}function g(n){const e=document.getElementById("content");e.appendChild(n),e.firstChild.style.display="none",e.removeChild(e.firstChild),e.firstChild.style.display="flex"}function E(n,e){const r=document.createElement("p");r.innerText=n;const t=document.createElement("div");switch(t.classList.add("msg"),t.appendChild(r),e){case"sucesso":case"aviso":case"erro":t.classList.add(e)}return t}function C(n=[]){const e=document.createElement("i");return e.classList.add(...n),e}f.styleTagTransform=m(),f.setAttributes=d(),f.insert=o().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=l(),e()(A.Z,f),A.Z&&A.Z.locals&&A.Z.locals;const b=function(){const n=document.createElement("div");n.setAttribute("id","campoMsgForm");const e=p("Usuário:","text","formUsuario","",[["minlength","3"],["required","true"]]),r=p("Senha:","password","formSenha","",[["minlength","8"],["required","true"]]),t=document.createElement("form");return t.appendChild(n),t.appendChild(e),t.appendChild(r),t},v=function(n=""){const e=document.createElement("h2");e.innerText=n;const r=document.createElement("div");r.setAttribute("id","campoMsgForm");const t=p("Nome da lista:","text","formNomeLista","",[["minlength","3"],["required","true"],["name","nome-lista"]]),a=p("Descrição:","text","formDescricaoLista","",[["maxlength","100"],["name","descricao-lista"]]),i=document.createElement("form");return i.appendChild(e),i.appendChild(r),i.appendChild(t),i.appendChild(a),i},B=class{#n;constructor(n,e=""){this.nome=n,this.descricao=e,this.tarefas=[],this.#n=new Date}get criadaEm(){return this.#n}},y=function(){const n=document.createElement("div");return n.classList.add("barraAcoes"),n},x=function(n){const e=h("button","Sair");return e.addEventListener("click",(()=>{g(un(n))})),e},w=function(){const n=C(["bi","bi-arrow-left"]),e=h("button","");return e.setAttribute("title","Voltar"),e.appendChild(n),e},W=(()=>{function n(){let n;try{n=window.localStorage;let e="__storage_test__";return n.setItem(e,e),n.removeItem(e),!0}catch(n){return!1}}return{disponivel:n,gravar:function(e,r){n()&&localStorage.setItem(e,r)},ler:function(e){if(n())return localStorage.getItem(e)},excluir:function(n){disponovel()&&localStorage.removeItem(n)}}})(),M=class{#n;constructor(n,e){this.titulo=n,this.dataConclusao=e,this.prioridade=0,this.concluida=!1,this.#n=new Date}get criadaEm(){return this.#n}},j=function(n,e,r){const t=h("submit","Salvar"),a=function(n=""){const e=document.createElement("h2");e.innerText=n;const r=document.createElement("div");r.setAttribute("id","campoMsgForm");const t=p("Nome da tarefa:","text","fromTitulo","",[["minlength","3"],["required","true"],["name","titulo-tarefa"]]),a=p("Data de conclusão:","date","formDataConclusao","",[["name","conclusaod-tarefa"],["required","true"]]),i=p("Horário de conclusão:","time","formHoraConclusao","",[["name","conclusaoh-tarefa"],["required","true"]]),o=function(n,e,r,t=[]){const a=document.createElement("div"),i=document.createElement("label");i.setAttribute("for",e),i.innerText=n;const o=document.createElement("select");return o.setAttribute("name",r),o.setAttribute("id",e),t.map((n=>{const e=document.createElement("option");e.innerText=n[0],e.setAttribute("value",n[1]),o.appendChild(e)})),a.appendChild(i),a.appendChild(o),a}("Prioridade:","formPrioridade","prioridade-tarefa",[["Comum","0"],["Urgente","1"]]),s=document.createElement("form");return s.appendChild(e),s.appendChild(r),s.appendChild(t),s.appendChild(a),s.appendChild(i),s.appendChild(o),s}("Nova tarefa");a.appendChild(t),a.addEventListener("submit",(t=>{t.preventDefault();const i=new M(a["titulo-tarefa"].value,new Date(`${a["conclusaod-tarefa"].value} ${a["conclusaoh-tarefa"].value}`));i.prioridade=parseInt(a["prioridade-tarefa"].value);for(let t=0;t<e.length;t++)if(e[t].username===r[0].username)for(let a=0;a<e[t].listas.length;a++)e[t].listas[a].criadaEm===n.criadaEm&&(e[t].listas[a].tarefas.push(i),r.pop(),r.push(e[t]),W.gravar("usuarios",JSON.stringify(e)),g(dn(e[t].listas[a],e,r)))}));const i=document.createElement("div");i.classList.add("card"),i.appendChild(a);const o=document.createElement("div");o.classList.add("conteudo"),o.appendChild(i);const s=w();s.addEventListener("click",(()=>{g(dn(n))}));const d=x(e),c=y();c.appendChild(s),c.appendChild(d);const l=document.createElement("section");return l.setAttribute("id","paginanovaTarefa"),l.appendChild(c),l.appendChild(o),l};function S(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function k(n){S(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||"object"==typeof n&&"[object Date]"===e?new Date(n.getTime()):"number"==typeof n||"[object Number]"===e?new Date(n):("string"!=typeof n&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function L(n,e){S(2,arguments);var r=k(n),t=k(e),a=r.getTime()-t.getTime();return a<0?-1:a>0?1:a}function T(n,e){S(2,arguments);var r=k(n),t=k(e),a=r.getFullYear()-t.getFullYear(),i=r.getMonth()-t.getMonth();return 12*a+i}function P(n){S(1,arguments);var e=k(n);return e.setHours(23,59,59,999),e}function D(n){S(1,arguments);var e=k(n),r=e.getMonth();return e.setFullYear(e.getFullYear(),r+1,0),e.setHours(23,59,59,999),e}function I(n){S(1,arguments);var e=k(n);return P(e).getTime()===D(e).getTime()}function q(n,e){S(2,arguments);var r,t=k(n),a=k(e),i=L(t,a),o=Math.abs(T(t,a));if(o<1)r=0;else{1===t.getMonth()&&t.getDate()>27&&t.setDate(30),t.setMonth(t.getMonth()-i*o);var s=L(t,a)===-i;I(k(n))&&1===o&&1===L(n,a)&&(s=!1),r=i*(o-Number(s))}return 0===r?0:r}function N(n,e){return S(2,arguments),k(n).getTime()-k(e).getTime()}var X={ceil:Math.ceil,round:Math.round,floor:Math.floor,trunc:function(n){return n<0?Math.ceil(n):Math.floor(n)}};function z(n){return n?X[n]:X.trunc}function Y(n,e,r){S(2,arguments);var t=N(n,e)/1e3;return z(null==r?void 0:r.roundingMethod)(t)}var O={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function F(n){return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.width?String(e.width):n.defaultWidth,t=n.formats[r]||n.formats[n.defaultWidth];return t}}var U={date:F({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:F({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:F({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},V={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function H(n){return function(e,r){var t,a=r||{};if("formatting"===(a.context?String(a.context):"standalone")&&n.formattingValues){var i=n.defaultFormattingWidth||n.defaultWidth,o=a.width?String(a.width):i;t=n.formattingValues[o]||n.formattingValues[i]}else{var s=n.defaultWidth,d=a.width?String(a.width):n.defaultWidth;t=n.values[d]||n.values[s]}return t[n.argumentCallback?n.argumentCallback(e):e]}}function J(n){return function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=r.width,a=t&&n.matchPatterns[t]||n.matchPatterns[n.defaultMatchWidth],i=e.match(a);if(!i)return null;var o,s=i[0],d=t&&n.parsePatterns[t]||n.parsePatterns[n.defaultParseWidth],c=Array.isArray(d)?R(d,(function(n){return n.test(s)})):Z(d,(function(n){return n.test(s)}));o=n.valueCallback?n.valueCallback(c):c,o=r.valueCallback?r.valueCallback(o):o;var l=e.slice(s.length);return{value:o,rest:l}}}function Z(n,e){for(var r in n)if(n.hasOwnProperty(r)&&e(n[r]))return r}function R(n,e){for(var r=0;r<n.length;r++)if(e(n[r]))return r}function _(n){return function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=e.match(n.matchPattern);if(!t)return null;var a=t[0],i=e.match(n.parsePattern);if(!i)return null;var o=n.valueCallback?n.valueCallback(i[0]):i[0];o=r.valueCallback?r.valueCallback(o):o;var s=e.slice(a.length);return{value:o,rest:s}}}const Q={code:"en-US",formatDistance:function(n,e,r){var t,a=O[n];return t="string"==typeof a?a:1===e?a.one:a.other.replace("{{count}}",e.toString()),null!=r&&r.addSuffix?r.comparison&&r.comparison>0?"in "+t:t+" ago":t},formatLong:U,formatRelative:function(n,e,r,t){return V[n]},localize:{ordinalNumber:function(n,e){var r=Number(n),t=r%100;if(t>20||t<10)switch(t%10){case 1:return r+"st";case 2:return r+"nd";case 3:return r+"rd"}return r+"th"},era:H({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:H({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(n){return n-1}}),month:H({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:H({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:H({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:_({matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(n){return parseInt(n,10)}}),era:J({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:J({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(n){return n+1}}),month:J({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:J({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:J({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};function $(n){return function(n,e){if(null==n)throw new TypeError("assign requires that input parameter not be null or undefined");for(var r in e=e||{})Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}({},n)}function G(n){var e=new Date(Date.UTC(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds()));return e.setUTCFullYear(n.getFullYear()),n.getTime()-e.getTime()}var K=1440,nn=43200,en={lessThanXSeconds:{one:"menos de um segundo",other:"menos de {{count}} segundos"},xSeconds:{one:"1 segundo",other:"{{count}} segundos"},halfAMinute:"meio minuto",lessThanXMinutes:{one:"menos de um minuto",other:"menos de {{count}} minutos"},xMinutes:{one:"1 minuto",other:"{{count}} minutos"},aboutXHours:{one:"cerca de 1 hora",other:"cerca de {{count}} horas"},xHours:{one:"1 hora",other:"{{count}} horas"},xDays:{one:"1 dia",other:"{{count}} dias"},aboutXWeeks:{one:"cerca de 1 semana",other:"cerca de {{count}} semanas"},xWeeks:{one:"1 semana",other:"{{count}} semanas"},aboutXMonths:{one:"cerca de 1 mês",other:"cerca de {{count}} meses"},xMonths:{one:"1 mês",other:"{{count}} meses"},aboutXYears:{one:"cerca de 1 ano",other:"cerca de {{count}} anos"},xYears:{one:"1 ano",other:"{{count}} anos"},overXYears:{one:"mais de 1 ano",other:"mais de {{count}} anos"},almostXYears:{one:"quase 1 ano",other:"quase {{count}} anos"}},rn={date:F({formats:{full:"EEEE, d 'de' MMMM 'de' y",long:"d 'de' MMMM 'de' y",medium:"d MMM y",short:"dd/MM/yyyy"},defaultWidth:"full"}),time:F({formats:{full:"HH:mm:ss zzzz",long:"HH:mm:ss z",medium:"HH:mm:ss",short:"HH:mm"},defaultWidth:"full"}),dateTime:F({formats:{full:"{{date}} 'às' {{time}}",long:"{{date}} 'às' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},tn={lastWeek:function(n,e,r){var t=n.getUTCDay();return"'"+(0===t||6===t?"último":"última")+"' eeee 'às' p"},yesterday:"'ontem às' p",today:"'hoje às' p",tomorrow:"'amanhã às' p",nextWeek:"eeee 'às' p",other:"P"},an={code:"pt-BR",formatDistance:function(n,e,r){var t;return r=r||{},t="string"==typeof en[n]?en[n]:1===e?en[n].one:en[n].other.replace("{{count}}",e),r.addSuffix?r.comparison>0?"em "+t:"há "+t:t},formatLong:rn,formatRelative:function(n,e,r,t){var a=tn[n];return"function"==typeof a?a(e,r,t):a},localize:{ordinalNumber:function(n,e){var r=Number(n),t=String((e||{}).unit);return"week"===t||"isoWeek"===t?r+"ª":r+"º"},era:H({values:{narrow:["AC","DC"],abbreviated:["AC","DC"],wide:["antes de cristo","depois de cristo"]},defaultWidth:"wide"}),quarter:H({values:{narrow:["1","2","3","4"],abbreviated:["T1","T2","T3","T4"],wide:["1º trimestre","2º trimestre","3º trimestre","4º trimestre"]},defaultWidth:"wide",argumentCallback:function(n){return Number(n)-1}}),month:H({values:{narrow:["j","f","m","a","m","j","j","a","s","o","n","d"],abbreviated:["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez"],wide:["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"]},defaultWidth:"wide"}),day:H({values:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sab"],abbreviated:["domingo","segunda","terça","quarta","quinta","sexta","sábado"],wide:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},defaultWidth:"wide"}),dayPeriod:H({values:{narrow:{am:"a",pm:"p",midnight:"mn",noon:"md",morning:"manhã",afternoon:"tarde",evening:"tarde",night:"noite"},abbreviated:{am:"AM",pm:"PM",midnight:"meia-noite",noon:"meio-dia",morning:"manhã",afternoon:"tarde",evening:"tarde",night:"noite"},wide:{am:"a.m.",pm:"p.m.",midnight:"meia-noite",noon:"meio-dia",morning:"manhã",afternoon:"tarde",evening:"tarde",night:"noite"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mn",noon:"md",morning:"da manhã",afternoon:"da tarde",evening:"da tarde",night:"da noite"},abbreviated:{am:"AM",pm:"PM",midnight:"meia-noite",noon:"meio-dia",morning:"da manhã",afternoon:"da tarde",evening:"da tarde",night:"da noite"},wide:{am:"a.m.",pm:"p.m.",midnight:"meia-noite",noon:"meio-dia",morning:"da manhã",afternoon:"da tarde",evening:"da tarde",night:"da noite"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:_({matchPattern:/^(\d+)[ºªo]?/i,parsePattern:/\d+/i,valueCallback:function(n){return parseInt(n,10)}}),era:J({matchPatterns:{narrow:/^(ac|dc|a|d)/i,abbreviated:/^(a\.?\s?c\.?|d\.?\s?c\.?)/i,wide:/^(antes de cristo|depois de cristo)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^ac/i,/^dc/i],wide:[/^antes de cristo/i,/^depois de cristo/i]},defaultParseWidth:"any"}),quarter:J({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^T[1234]/i,wide:/^[1234](º)? trimestre/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(n){return n+1}}),month:J({matchPatterns:{narrow:/^[jfmajsond]/i,abbreviated:/^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,wide:/^(janeiro|fevereiro|março|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^fev/i,/^mar/i,/^abr/i,/^mai/i,/^jun/i,/^jul/i,/^ago/i,/^set/i,/^out/i,/^nov/i,/^dez/i]},defaultParseWidth:"any"}),day:J({matchPatterns:{narrow:/^(dom|[23456]ª?|s[aá]b)/i,short:/^(dom|[23456]ª?|s[aá]b)/i,abbreviated:/^(dom|seg|ter|qua|qui|sex|s[aá]b)/i,wide:/^(domingo|(segunda|ter[cç]a|quarta|quinta|sexta)([- ]feira)?|s[aá]bado)/i},defaultMatchWidth:"wide",parsePatterns:{short:[/^d/i,/^2/i,/^3/i,/^4/i,/^5/i,/^6/i,/^s[aá]/i],narrow:[/^d/i,/^2/i,/^3/i,/^4/i,/^5/i,/^6/i,/^s[aá]/i],any:[/^d/i,/^seg/i,/^t/i,/^qua/i,/^qui/i,/^sex/i,/^s[aá]b/i]},defaultParseWidth:"any"}),dayPeriod:J({matchPatterns:{narrow:/^(a|p|mn|md|(da) (manhã|tarde|noite))/i,any:/^([ap]\.?\s?m\.?|meia[-\s]noite|meio[-\s]dia|(da) (manhã|tarde|noite))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mn|^meia[-\s]noite/i,noon:/^md|^meio[-\s]dia/i,morning:/manhã/i,afternoon:/tarde/i,evening:/tarde/i,night:/noite/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};const on=an;function sn(n,e,r){const t=h("button","Nova tarefa");t.addEventListener("click",(()=>g(j(n,e,r))));const a=w();a.addEventListener("click",(()=>{g(cn(e,r))}));const i=x(e),o=y();o.appendChild(a),o.appendChild(i),o.appendChild(t);const s=function(n,e,r){const t=document.createElement("h2");t.innerText=n.nome;const a=document.createElement("p");a.innerText=n.descricao;const i=document.createElement("div");i.classList.add("listagem-tarefas"),n.tarefas.map((t=>{i.appendChild(function(n,e,r,t){const a=document.createElement("p");if(a.classList.add("nome-tarefa"),a.innerText=n.titulo,1===n.prioridade){const n=C(["bi","bi-exclamation-diamond"]);n.setAttribute("title","Urgente"),a.append(n)}const i=document.createElement("p");i.classList.add("data-tarefa");const o=document.createElement("div");o.classList.add("texto"),o.appendChild(a),o.appendChild(i);const s=document.createElement("i"),d=h("button","");d.addEventListener("click",(()=>{for(let a=0;a<r.length;a++)if(r[a].username===t[0].username)for(let i=0;i<r[a].listas.length;i++)if(r[a].listas[i].criadaEm===e.criadaEm)for(let e=0;e<r[a].listas[i].tarefas.length;e++)r[a].listas[i].tarefas[e].criadaEm===n.criadaEm&&(r[a].listas[i].tarefas[e].concluida=!n.concluida,t.pop(),t.push(r[a]),W.gravar("usuarios",JSON.stringify(r)),g(sn(r[a].listas[i],r,t)))}));const c=document.createElement("div");return n.concluida?(c.classList.add("concluida"),s.classList.add("bi","bi-check2-square"),d.appendChild(s),d.setAttribute("title","Marcar como não concluida"),i.innerText="Concluida"):(s.classList.add("bi","bi-square"),d.appendChild(s),d.setAttribute("title","Marcar como concluida"),i.innerText=function(n,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};S(2,arguments);var t=r.locale||Q;if(!t.formatDistance)throw new RangeError("locale must contain formatDistance property");var a=L(n,e);if(isNaN(a))throw new RangeError("Invalid time value");var i,o,s=$(r);s.addSuffix=Boolean(r.addSuffix),s.comparison=a,a>0?(i=k(e),o=k(n)):(i=k(n),o=k(e));var d,c=Y(o,i),l=(G(o)-G(i))/1e3,u=Math.round((c-l)/60);if(u<2)return r.includeSeconds?c<5?t.formatDistance("lessThanXSeconds",5,s):c<10?t.formatDistance("lessThanXSeconds",10,s):c<20?t.formatDistance("lessThanXSeconds",20,s):c<40?t.formatDistance("halfAMinute",null,s):c<60?t.formatDistance("lessThanXMinutes",1,s):t.formatDistance("xMinutes",1,s):0===u?t.formatDistance("lessThanXMinutes",1,s):t.formatDistance("xMinutes",u,s);if(u<45)return t.formatDistance("xMinutes",u,s);if(u<90)return t.formatDistance("aboutXHours",1,s);if(u<K){var m=Math.round(u/60);return t.formatDistance("aboutXHours",m,s)}if(u<2520)return t.formatDistance("xDays",1,s);if(u<nn){var A=Math.round(u/K);return t.formatDistance("xDays",A,s)}if(u<86400)return d=Math.round(u/nn),t.formatDistance("aboutXMonths",d,s);if((d=q(o,i))<12){var f=Math.round(u/nn);return t.formatDistance("xMonths",f,s)}var p=d%12,h=Math.floor(d/12);return p<3?t.formatDistance("aboutXYears",h,s):p<9?t.formatDistance("overXYears",h,s):t.formatDistance("almostXYears",h+1,s)}(n.dataConclusao,new Date,{locale:on,addSuffix:!0})),c.classList.add("tarefa"),c.appendChild(d),c.appendChild(o),c}(t,n,e,r))}));const o=document.createElement("div");return o.appendChild(t),o.appendChild(a),o.appendChild(i),o}(n,e,r);s.classList.add("tarefas");const d=document.createElement("div");d.classList.add("card"),d.appendChild(s);const c=document.createElement("div");c.classList.add("conteudo"),c.appendChild(d);const l=document.createElement("section");return l.setAttribute("id","paginaVerLista"),l.appendChild(o),l.appendChild(c),l}const dn=sn,cn=function n(e,r){const t=C(["bi","bi-plus"]),a=h("button","");a.setAttribute("title","Nova lista"),a.appendChild(t),a.addEventListener("click",(()=>{g(function(n,e){const r=h("submit","Salvar"),t=v("Nova lista");t.appendChild(r),t.addEventListener("submit",(r=>{r.preventDefault();const a=new B(t["nome-lista"].value,t["descricao-lista"].value);for(let r=0;r<n.length;r++)n[r].username===e[0].username&&(n[r].listas.unshift(a),e.pop(),e.push(n[r]),W.gravar("usuarios",JSON.stringify(n)),g(cn(n,e)))}));const a=document.createElement("div");a.classList.add("card"),a.appendChild(t);const i=document.createElement("div");i.classList.add("conteudo"),i.appendChild(a);const o=w();o.addEventListener("click",(()=>{g(cn(n,e))}));const s=x(n),d=y();d.appendChild(o),d.appendChild(s);const c=document.createElement("section");return c.setAttribute("id","paginaNovaLista"),c.appendChild(d),c.appendChild(i),c}(e,r))}));const i=y();i.appendChild(a),i.appendChild(x(e));const o=document.createElement("div");o.classList.add("listas"),r[0].listas.map((t=>{const a=C(["bi","bi-eye"]),i=h("button","");i.setAttribute("title","Visualizar lista"),i.appendChild(a),i.addEventListener("click",(()=>function(n){g(dn(n,e,r))}(t)));const s=C(["bi","bi-pen"]),d=h("button","");d.setAttribute("title","Editar lista"),d.appendChild(s),d.addEventListener("click",(()=>{g(function(n,e,r){const t=w();t.addEventListener("click",(()=>{g(cn(e,r))}));const a=x(e),i=y();i.appendChild(t),i.appendChild(a);const o=h("submit","Atualizar"),s=v("Editar lista");s.appendChild(o),s.addEventListener("submit",(t=>{t.preventDefault();for(let t=0;t<e.length;t++)if(e[t].username===r[0].username)for(let a=0;a<e[t].listas.length;a++)e[t].listas[a].criadaEm===n.criadaEm&&(e[t].listas[a].nome=s["nome-lista"].value,e[t].listas[a].descricao=s["descricao-lista"].value,r.pop(),r.push(e[t]),W.gravar("usuarios",JSON.stringify(e)),g(cn(e,r)))})),s["nome-lista"].value=n.nome,s["descricao-lista"].value=n.descricao;const d=document.createElement("div");d.classList.add("card"),d.appendChild(s);const c=document.createElement("div");c.classList.add("conteudo"),c.appendChild(d);const l=document.createElement("section");return l.setAttribute("id","paginaEditarLista"),l.appendChild(i),l.appendChild(c),l}(t,e,r))}));const c=C(["bi","bi-trash"]),l=h("button","");l.setAttribute("title","Apagar lista"),l.appendChild(c),l.addEventListener("click",(()=>function(t){for(let a=0;a<e.length;a++)e[a].username===r[0].username&&(e[a].listas=e[a].listas.filter((n=>n.criadaEm!==t)),r.pop(),r.push(e[a]),W.gravar("usuarios",JSON.stringify(e)),g(n(e,r)))}(t.criadaEm)));const u=document.createElement("div");u.classList.add("botoes"),u.appendChild(i),u.appendChild(d),u.appendChild(l);const m=function(n){const e=document.createElement("div");e.classList.add("card");const r=document.createElement("h3");r.innerText=n.nome;const t=document.createElement("p");t.innerText=n.descricao;const a=document.createElement("p");1===n.tarefas.length?a.innerText=`${n.tarefas.length} tarefa`:a.innerText=`${n.tarefas.length} tarefas`;const i=document.createElement("div");return i.classList.add("conteudo"),i.appendChild(r),i.appendChild(a),i.appendChild(t),e.appendChild(i),e}(t);m.appendChild(u),o.appendChild(m)}));const s=document.createElement("section");return s.setAttribute("id","paginaInicial"),s.appendChild(i),s.appendChild(o),s};function ln(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}const un=function(n){W.ler("usuarios")&&(n=JSON.parse(W.ler("usuarios")));const e=[],r=document.createElement("h2");r.innerText="Entrar";const t=document.createElement("a");t.setAttribute("href","#"),t.innerText="Cadastre-se",t.addEventListener("click",(e=>{g(function(n){W.ler("usuarios")&&(n=JSON.parse(W.ler("usuarios")));const e=[],r=document.createElement("h2");r.innerText="Criar conta";let t="Os dados ficam salvos apenas localmente no seu dispositivo, ";t+="mesmo assim recomendados que utilize uma senha que não use em outras contas";const a=p("Confirmação de senha","password","formSenha2","Os dados ficam salvos apenas localmente no seu dispositivo, mesmo assim recomendados que utilize uma senha que não use em outras contas",[["minlength","8"],["required","true"]]),i=b();i.appendChild(a),i.addEventListener("submit",(r=>function(r){r.preventDefault();const t=document.getElementById("formUsuario").value,a=document.getElementById("formSenha").value,i=document.getElementById("formSenha2").value,o=document.getElementById("campoMsgForm");if(n.some((n=>n.usuario===t))){o.hasChildNodes()&&o.removeChild(o.children[0]);const n=E("Esse nome de usuário já está em uso","aviso");o.appendChild(n)}else if(a!==i){o.hasChildNodes()&&o.removeChild(o.children[0]);const n=E("As senhas não correspondem","aviso");o.appendChild(n)}else{const r=function(n,e){S(2,arguments);var r=k(n),t=ln(e);return isNaN(t)?new Date(NaN):t?(r.setDate(r.getDate()+t),r):r}(new Date,7),i=new M("Tarefa 1",r),o=new B("Minhas tarefas");o.tarefas.push(i);const s=new class{constructor(n,e){this.usuario=n,this.listas=[],this.senha=e}}(t,a);s.listas.push(o),n.push(s),e.push(s),W.gravar("usuarios",JSON.stringify(n)),g(cn(n,e))}}(r)));const o=document.createElement("a");o.setAttribute("href","#"),o.innerText="Faça login",o.addEventListener("click",(()=>{g(un(n))}));const s=document.createElement("p");s.innerText="Já possui conta? ",s.appendChild(o),i.appendChild(s);const d=h("submit","Cadastrar-se");i.appendChild(d);const c=document.createElement("div");c.classList.add("card"),c.appendChild(r),c.appendChild(i);const l=document.createElement("section");return l.setAttribute("id","paginaCadastro"),l.appendChild(c),l}(n))}));const a=document.createElement("p");a.innerText="Não possui conta? ",a.appendChild(t);const i=h("submit","Entrar"),o=b();o.appendChild(a),o.appendChild(i),o.addEventListener("submit",(r=>function(r){r.preventDefault();const t=document.getElementById("formUsuario").value,a=document.getElementById("formSenha").value;if(n.some((n=>n.usuario===t&&n.senha===a)))e.push(...n.filter((n=>n.usuario===t))),g(cn(n,e));else{const n=document.getElementById("campoMsgForm");n.hasChildNodes()&&n.removeChild(n.children[0]);const e=E("Credenciais inválidas","erro");n.appendChild(e)}}(r)));const s=document.createElement("div");s.classList.add("card"),s.appendChild(r),s.appendChild(o);const d=document.createElement("section");return d.setAttribute("id","paginaLogin"),d.appendChild(s),d};document.getElementById("content").appendChild(un([]))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
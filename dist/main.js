(()=>{"use strict";var n={424:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(537),i=t.n(a),r=t(645),o=t.n(r)()(i());o.push([n.id,':root {\n  font-size: 16px;\n  --cor-1: #2f3a8f;\n  --cor-2: #fe7e6d;\n  --sombra: 0 0 0.5rem rgba(12, 16, 39, 0.3);\n  --sombra-leve: 0 0 0.3rem rgba(0, 0, 0, 0.2);\n}\n\n* {\n  font-family: "Outfit", sans-serif;\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  max-width: 100%;\n}\n\nbody {\n  width: 100vw;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  background-color: #ededed;\n  gap: 1rem;\n}\n\np,\na,\ninput,\nlabel,\nbutton,\nspan,\nselect {\n  font-size: 1.2rem;\n}\n\na {\n  text-decoration: none;\n  color: inherit;\n  transition: 0.3s color;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\nform a {\n  color: var(--cor-1);\n}\n\nform a:hover {\n  text-decoration: underline;\n}\n\nform .form-ajuda {\n  font-size: 0.8rem;\n  color: rgba(0, 0, 0, 0.6);\n}\n\nform div {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n}\n\nbutton {\n  border: none;\n  background-color: var(--cor-1);\n  color: #fff;\n  padding: 0.5rem 1rem;\n  border-radius: 0.2rem;\n  border: 2px solid var(--cor-1);\n  cursor: pointer;\n  transition: 0.2s background;\n}\n\nbutton:hover {\n  color: var(--cor-1);\n  background-color: #fff;\n  border: 2px solid var(--cor-1);\n}\n\ninput,\nselect {\n  width: 100%;\n  padding: 0.5rem;\n  border: 2px #ddd dashed;\n  border-radius: 0.1rem;\n  transition: 0.2s border;\n}\n\ninput:focus,\nselect:focus {\n  border: 2px dashed var(--cor-1);\n  outline: none;\n}\n\nh2 {\n  font-size: 1.8rem;\n}\n\nheader,\nfooter {\n  background: var(--cor-1);\n  padding: 1rem;\n  color: #fff;\n  width: 100%;\n  text-align: center;\n  box-shadow: var(--sombra);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nheader h1 {\n  font-family: "Oleo Script", cursive;\n}\n\nmain {\n  flex-grow: 1;\n  width: 100%;\n  max-width: 1280px;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 0 1rem;\n}\n\nfooter {\n  gap: 1.5rem;\n}\n\nfooter i {\n  font-size: 1.3rem;\n}\n\nfooter .links {\n  color: #fff;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 0.5rem;\n}\n\nfooter a:hover {\n  color: #ddd;\n}\n\n.card {\n  padding: 1rem;\n  background: #fff;\n  box-shadow: var(--sombra-leve);\n  border-radius: 0.2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  width: 95%;\n}\n\n.msg {\n  padding: 0.5rem;\n  border-radius: 0.2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  width: 100%;\n}\n\n.msg.sucesso {\n  background: #00856a;\n}\n\n.msg.aviso {\n  background: #fba609;\n}\n\n.msg.erro {\n  background: #b53471;\n}\n\n.msg p {\n  width: 100%;\n  text-align: center;\n}\n\n/* Página de login e c adastro */\nsection {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n}\n\n#paginaInicial .card {\n  width: 100%;\n}\n\n/* Página inicial */\n.barraAcoes {\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n#paginaInicial h3 {\n  font-size: 1.5rem;\n}\n\n#paginaInicial .listas {\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1;\n  gap: 1rem;\n}\n\n#paginaInicial .conteudo {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 0.5rem;\n  flex-grow: 1;\n}\n\n#paginaInicial .listas .card .botoes {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.conteudo {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  padding: 0;\n}\n\n/* Página ver lista de tarefas */\n#paginaVerLista .tarefa {\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  width: 100%;\n  gap: 0.5rem;\n}\n\n#paginaVerLista .tarefas {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n#paginaVerLista .texto {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  flex-grow: 1;\n}\n\n#paginaVerLista .tarefa button {\n  padding: 0.1rem;\n  background: none;\n  color: var(--cor-1);\n  border: none;\n}\n\n#paginaVerLista .tarefa button:hover {\n  padding: 0.1rem;\n}\n\n#paginaVerLista .data-tarefa {\n  font-size: 0.8rem;\n  color: var(--cor-1);\n}\n\n#paginaVerLista .concluida .data-tarefa {\n  color: #666;\n}\n\n#paginaVerLista .listagem-tarefas {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.bi-exclamation-diamond {\n  color: #fba609;\n  margin-left: 0.25rem;\n}\n\n#paginaVerLista .concluida .nome-tarefa {\n  text-decoration: line-through;\n}\n\n@media (min-width: 600px) {\n  .card {\n    width: 60%;\n  }\n\n  #paginaInicial .card {\n    width: 100%;\n  }\n\n  #paginaInicial .listas {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n@media (min-width: 900px) {\n  .card {\n    width: 40%;\n  }\n\n  #paginaInicial .card {\n    width: 100%;\n  }\n\n  #paginaInicial .listas {\n    grid-template-columns: repeat(3, 1fr);\n  }\n}\n\n@media (min-width: 1280px) {\n  .card {\n    width: 30%;\n  }\n\n  #paginaInicial .card {\n    width: 100%;\n  }\n\n  #paginaInicial .listas {\n    grid-template-columns: repeat(4, 1fr);\n  }\n}\n',"",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"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",sourcesContent:[':root {\n  font-size: 16px;\n  --cor-1: #2f3a8f;\n  --cor-2: #fe7e6d;\n  --sombra: 0 0 0.5rem rgba(12, 16, 39, 0.3);\n  --sombra-leve: 0 0 0.3rem rgba(0, 0, 0, 0.2);\n}\n\n* {\n  font-family: "Outfit", sans-serif;\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  max-width: 100%;\n}\n\nbody {\n  width: 100vw;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  background-color: #ededed;\n  gap: 1rem;\n}\n\np,\na,\ninput,\nlabel,\nbutton,\nspan,\nselect {\n  font-size: 1.2rem;\n}\n\na {\n  text-decoration: none;\n  color: inherit;\n  transition: 0.3s color;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\nform a {\n  color: var(--cor-1);\n}\n\nform a:hover {\n  text-decoration: underline;\n}\n\nform .form-ajuda {\n  font-size: 0.8rem;\n  color: rgba(0, 0, 0, 0.6);\n}\n\nform div {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n}\n\nbutton {\n  border: none;\n  background-color: var(--cor-1);\n  color: #fff;\n  padding: 0.5rem 1rem;\n  border-radius: 0.2rem;\n  border: 2px solid var(--cor-1);\n  cursor: pointer;\n  transition: 0.2s background;\n}\n\nbutton:hover {\n  color: var(--cor-1);\n  background-color: #fff;\n  border: 2px solid var(--cor-1);\n}\n\ninput,\nselect {\n  width: 100%;\n  padding: 0.5rem;\n  border: 2px #ddd dashed;\n  border-radius: 0.1rem;\n  transition: 0.2s border;\n}\n\ninput:focus,\nselect:focus {\n  border: 2px dashed var(--cor-1);\n  outline: none;\n}\n\nh2 {\n  font-size: 1.8rem;\n}\n\nheader,\nfooter {\n  background: var(--cor-1);\n  padding: 1rem;\n  color: #fff;\n  width: 100%;\n  text-align: center;\n  box-shadow: var(--sombra);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nheader h1 {\n  font-family: "Oleo Script", cursive;\n}\n\nmain {\n  flex-grow: 1;\n  width: 100%;\n  max-width: 1280px;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 0 1rem;\n}\n\nfooter {\n  gap: 1.5rem;\n}\n\nfooter i {\n  font-size: 1.3rem;\n}\n\nfooter .links {\n  color: #fff;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 0.5rem;\n}\n\nfooter a:hover {\n  color: #ddd;\n}\n\n.card {\n  padding: 1rem;\n  background: #fff;\n  box-shadow: var(--sombra-leve);\n  border-radius: 0.2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  width: 95%;\n}\n\n.msg {\n  padding: 0.5rem;\n  border-radius: 0.2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  width: 100%;\n}\n\n.msg.sucesso {\n  background: #00856a;\n}\n\n.msg.aviso {\n  background: #fba609;\n}\n\n.msg.erro {\n  background: #b53471;\n}\n\n.msg p {\n  width: 100%;\n  text-align: center;\n}\n\n/* Página de login e c adastro */\nsection {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n}\n\n#paginaInicial .card {\n  width: 100%;\n}\n\n/* Página inicial */\n.barraAcoes {\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n#paginaInicial h3 {\n  font-size: 1.5rem;\n}\n\n#paginaInicial .listas {\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1;\n  gap: 1rem;\n}\n\n#paginaInicial .conteudo {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 0.5rem;\n  flex-grow: 1;\n}\n\n#paginaInicial .listas .card .botoes {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.conteudo {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  padding: 0;\n}\n\n/* Página ver lista de tarefas */\n#paginaVerLista .tarefa {\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  width: 100%;\n  gap: 0.5rem;\n}\n\n#paginaVerLista .tarefas {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n#paginaVerLista .texto {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  flex-grow: 1;\n}\n\n#paginaVerLista .tarefa button {\n  padding: 0.1rem;\n  background: none;\n  color: var(--cor-1);\n  border: none;\n}\n\n#paginaVerLista .tarefa button:hover {\n  padding: 0.1rem;\n}\n\n#paginaVerLista .data-tarefa {\n  font-size: 0.8rem;\n  color: var(--cor-1);\n}\n\n#paginaVerLista .concluida .data-tarefa {\n  color: #666;\n}\n\n#paginaVerLista .listagem-tarefas {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.bi-exclamation-diamond {\n  color: #fba609;\n  margin-left: 0.25rem;\n}\n\n#paginaVerLista .concluida .nome-tarefa {\n  text-decoration: line-through;\n}\n\n@media (min-width: 600px) {\n  .card {\n    width: 60%;\n  }\n\n  #paginaInicial .card {\n    width: 100%;\n  }\n\n  #paginaInicial .listas {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n@media (min-width: 900px) {\n  .card {\n    width: 40%;\n  }\n\n  #paginaInicial .card {\n    width: 100%;\n  }\n\n  #paginaInicial .listas {\n    grid-template-columns: repeat(3, 1fr);\n  }\n}\n\n@media (min-width: 1280px) {\n  .card {\n    width: 30%;\n  }\n\n  #paginaInicial .card {\n    width: 100%;\n  }\n\n  #paginaInicial .listas {\n    grid-template-columns: repeat(4, 1fr);\n  }\n}\n'],sourceRoot:""}]);const s=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(a)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(o[d]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);a&&o[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(i," */"),o=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(o).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var r={},o=[],s=0;s<n.length;s++){var d=n[s],c=a.base?d[0]+a.base:d[0],l=r[c]||0,u="".concat(c," ").concat(l);r[c]=l+1;var m=t(u),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==m)e[m].references++,e[m].updater(A);else{var f=i(A,a);a.byIndex=s,e.splice(s,0,{identifier:u,updater:f,references:1})}o.push(u)}return o}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var r=a(n=n||[],i=i||{});return function(n){n=n||[];for(var o=0;o<r.length;o++){var s=t(r[o]);e[s].references--}for(var d=a(n,i),c=0;c<r.length;c++){var l=t(r[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=d}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,i&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var i=e[a];if(void 0!==i)return i.exports;var r=e[a]={id:a,exports:{}};return n[a](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),a=t(795),i=t.n(a),r=t(569),o=t.n(r),s=t(565),d=t.n(s),c=t(216),l=t.n(c),u=t(589),m=t.n(u),A=t(424),f={};function p(n,e,t,a,i=[]){const r=document.createElement("div"),o=document.createElement("label");o.setAttribute("for",t),o.innerText=n;const s=document.createElement("input");s.setAttribute("type",e),s.setAttribute("id",t),i.map((n=>{s.setAttribute(n[0],n[1])}));const d=document.createElement("p");return d.innerText=a,d.classList.add("form-ajuda"),r.appendChild(o),r.appendChild(s),r.appendChild(d),r}function h(n,e){const t=document.createElement("button");return t.setAttribute("type",n),t.innerText=e,t}function g(n){const e=document.getElementById("content");e.appendChild(n),e.firstChild.style.display="none",e.removeChild(e.firstChild),e.firstChild.style.display="flex"}function E(n,e){const t=document.createElement("p");t.innerText=n;const a=document.createElement("div");switch(a.classList.add("msg"),a.appendChild(t),e){case"sucesso":case"aviso":case"erro":a.classList.add(e)}return a}function C(n=[]){const e=document.createElement("i");return e.classList.add(...n),e}f.styleTagTransform=m(),f.setAttributes=d(),f.insert=o().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=l(),e()(A.Z,f),A.Z&&A.Z.locals&&A.Z.locals;const b=function(){const n=document.createElement("div");n.setAttribute("id","campoMsgForm");const e=p("Usuário:","text","formUsuario","",[["minlength","3"],["required","true"]]),t=p("Senha:","password","formSenha","",[["minlength","8"],["required","true"]]),a=document.createElement("form");return a.appendChild(n),a.appendChild(e),a.appendChild(t),a},v=function(n=""){const e=document.createElement("h2");e.innerText=n;const t=document.createElement("div");t.setAttribute("id","campoMsgForm");const a=p("Nome da lista:","text","formNomeLista","",[["minlength","3"],["required","true"],["name","nome-lista"]]),i=p("Descrição:","text","formDescricaoLista","",[["maxlength","100"],["name","descricao-lista"]]),r=document.createElement("form");return r.appendChild(e),r.appendChild(t),r.appendChild(a),r.appendChild(i),r},B=class{#n;constructor(n,e=""){this.nome=n,this.descricao=e,this.tarefas=[],this.#n=new Date}get criadaEm(){return this.#n}},y=function(){const n=document.createElement("div");return n.classList.add("barraAcoes"),n},x=function(n){const e=h("button","Sair");return e.addEventListener("click",(()=>{g(ln(n))})),e},w=function(){const n=C(["bi","bi-arrow-left"]),e=h("button","");return e.setAttribute("title","Voltar"),e.appendChild(n),e},W=class{#n;constructor(n,e){this.titulo=n,this.dataConclusao=e,this.prioridade=0,this.concluida=!1,this.#n=new Date}get criadaEm(){return this.#n}},M=function(n,e,t){const a=h("submit","Salvar"),i=function(n=""){const e=document.createElement("h2");e.innerText=n;const t=document.createElement("div");t.setAttribute("id","campoMsgForm");const a=p("Nome da tarefa:","text","fromTitulo","",[["minlength","3"],["required","true"],["name","titulo-tarefa"]]),i=p("Data de conclusão:","date","formDataConclusao","",[["name","conclusaod-tarefa"],["required","true"]]),r=p("Horário de conclusão:","time","formHoraConclusao","",[["name","conclusaoh-tarefa"],["required","true"]]),o=function(n,e,t,a=[]){const i=document.createElement("div"),r=document.createElement("label");r.setAttribute("for",e),r.innerText=n;const o=document.createElement("select");return o.setAttribute("name",t),o.setAttribute("id",e),a.map((n=>{const e=document.createElement("option");e.innerText=n[0],e.setAttribute("value",n[1]),o.appendChild(e)})),i.appendChild(r),i.appendChild(o),i}("Prioridade:","formPrioridade","prioridade-tarefa",[["Comum","0"],["Urgente","1"]]),s=document.createElement("form");return s.appendChild(e),s.appendChild(t),s.appendChild(a),s.appendChild(i),s.appendChild(r),s.appendChild(o),s}("Nova tarefa");i.appendChild(a),i.addEventListener("submit",(a=>{a.preventDefault();const r=new W(i["titulo-tarefa"].value,new Date(`${i["conclusaod-tarefa"].value} ${i["conclusaoh-tarefa"].value}`));r.prioridade=parseInt(i["prioridade-tarefa"].value);for(let a=0;a<e.length;a++)if(e[a].username===t[0].username)for(let i=0;i<e[a].listas.length;i++)e[a].listas[i].criadaEm===n.criadaEm&&(e[a].listas[i].tarefas.push(r),t.pop(),t.push(e[a]),g(sn(e[a].listas[i],e,t)))}));const r=document.createElement("div");r.classList.add("card"),r.appendChild(i);const o=document.createElement("div");o.classList.add("conteudo"),o.appendChild(r);const s=w();s.addEventListener("click",(()=>{g(sn(n))}));const d=x(e),c=y();c.appendChild(s),c.appendChild(d);const l=document.createElement("section");return l.setAttribute("id","paginanovaTarefa"),l.appendChild(c),l.appendChild(o),l};function j(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function k(n){j(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||"object"==typeof n&&"[object Date]"===e?new Date(n.getTime()):"number"==typeof n||"[object Number]"===e?new Date(n):("string"!=typeof n&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function L(n,e){j(2,arguments);var t=k(n),a=k(e),i=t.getTime()-a.getTime();return i<0?-1:i>0?1:i}function T(n,e){j(2,arguments);var t=k(n),a=k(e),i=t.getFullYear()-a.getFullYear(),r=t.getMonth()-a.getMonth();return 12*i+r}function S(n){j(1,arguments);var e=k(n);return e.setHours(23,59,59,999),e}function P(n){j(1,arguments);var e=k(n),t=e.getMonth();return e.setFullYear(e.getFullYear(),t+1,0),e.setHours(23,59,59,999),e}function D(n){j(1,arguments);var e=k(n);return S(e).getTime()===P(e).getTime()}function q(n,e){j(2,arguments);var t,a=k(n),i=k(e),r=L(a,i),o=Math.abs(T(a,i));if(o<1)t=0;else{1===a.getMonth()&&a.getDate()>27&&a.setDate(30),a.setMonth(a.getMonth()-r*o);var s=L(a,i)===-r;D(k(n))&&1===o&&1===L(n,i)&&(s=!1),t=r*(o-Number(s))}return 0===t?0:t}function I(n,e){return j(2,arguments),k(n).getTime()-k(e).getTime()}var X={ceil:Math.ceil,round:Math.round,floor:Math.floor,trunc:function(n){return n<0?Math.ceil(n):Math.floor(n)}};function N(n){return n?X[n]:X.trunc}function z(n,e,t){j(2,arguments);var a=I(n,e)/1e3;return N(null==t?void 0:t.roundingMethod)(a)}var Y={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function F(n){return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.width?String(e.width):n.defaultWidth,a=n.formats[t]||n.formats[n.defaultWidth];return a}}var U={date:F({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:F({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:F({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},V={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function O(n){return function(e,t){var a,i=t||{};if("formatting"===(i.context?String(i.context):"standalone")&&n.formattingValues){var r=n.defaultFormattingWidth||n.defaultWidth,o=i.width?String(i.width):r;a=n.formattingValues[o]||n.formattingValues[r]}else{var s=n.defaultWidth,d=i.width?String(i.width):n.defaultWidth;a=n.values[d]||n.values[s]}return a[n.argumentCallback?n.argumentCallback(e):e]}}function H(n){return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=t.width,i=a&&n.matchPatterns[a]||n.matchPatterns[n.defaultMatchWidth],r=e.match(i);if(!r)return null;var o,s=r[0],d=a&&n.parsePatterns[a]||n.parsePatterns[n.defaultParseWidth],c=Array.isArray(d)?J(d,(function(n){return n.test(s)})):Z(d,(function(n){return n.test(s)}));o=n.valueCallback?n.valueCallback(c):c,o=t.valueCallback?t.valueCallback(o):o;var l=e.slice(s.length);return{value:o,rest:l}}}function Z(n,e){for(var t in n)if(n.hasOwnProperty(t)&&e(n[t]))return t}function J(n,e){for(var t=0;t<n.length;t++)if(e(n[t]))return t}function R(n){return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=e.match(n.matchPattern);if(!a)return null;var i=a[0],r=e.match(n.parsePattern);if(!r)return null;var o=n.valueCallback?n.valueCallback(r[0]):r[0];o=t.valueCallback?t.valueCallback(o):o;var s=e.slice(i.length);return{value:o,rest:s}}}const Q={code:"en-US",formatDistance:function(n,e,t){var a,i=Y[n];return a="string"==typeof i?i:1===e?i.one:i.other.replace("{{count}}",e.toString()),null!=t&&t.addSuffix?t.comparison&&t.comparison>0?"in "+a:a+" ago":a},formatLong:U,formatRelative:function(n,e,t,a){return V[n]},localize:{ordinalNumber:function(n,e){var t=Number(n),a=t%100;if(a>20||a<10)switch(a%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd"}return t+"th"},era:O({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:O({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(n){return n-1}}),month:O({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:O({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:O({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:R({matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(n){return parseInt(n,10)}}),era:H({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:H({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(n){return n+1}}),month:H({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:H({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:H({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};function $(n){return function(n,e){if(null==n)throw new TypeError("assign requires that input parameter not be null or undefined");for(var t in e=e||{})Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t]);return n}({},n)}function _(n){var e=new Date(Date.UTC(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds()));return e.setUTCFullYear(n.getFullYear()),n.getTime()-e.getTime()}var G=1440,K=43200,nn={lessThanXSeconds:{one:"menos de um segundo",other:"menos de {{count}} segundos"},xSeconds:{one:"1 segundo",other:"{{count}} segundos"},halfAMinute:"meio minuto",lessThanXMinutes:{one:"menos de um minuto",other:"menos de {{count}} minutos"},xMinutes:{one:"1 minuto",other:"{{count}} minutos"},aboutXHours:{one:"cerca de 1 hora",other:"cerca de {{count}} horas"},xHours:{one:"1 hora",other:"{{count}} horas"},xDays:{one:"1 dia",other:"{{count}} dias"},aboutXWeeks:{one:"cerca de 1 semana",other:"cerca de {{count}} semanas"},xWeeks:{one:"1 semana",other:"{{count}} semanas"},aboutXMonths:{one:"cerca de 1 mês",other:"cerca de {{count}} meses"},xMonths:{one:"1 mês",other:"{{count}} meses"},aboutXYears:{one:"cerca de 1 ano",other:"cerca de {{count}} anos"},xYears:{one:"1 ano",other:"{{count}} anos"},overXYears:{one:"mais de 1 ano",other:"mais de {{count}} anos"},almostXYears:{one:"quase 1 ano",other:"quase {{count}} anos"}},en={date:F({formats:{full:"EEEE, d 'de' MMMM 'de' y",long:"d 'de' MMMM 'de' y",medium:"d MMM y",short:"dd/MM/yyyy"},defaultWidth:"full"}),time:F({formats:{full:"HH:mm:ss zzzz",long:"HH:mm:ss z",medium:"HH:mm:ss",short:"HH:mm"},defaultWidth:"full"}),dateTime:F({formats:{full:"{{date}} 'às' {{time}}",long:"{{date}} 'às' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},tn={lastWeek:function(n,e,t){var a=n.getUTCDay();return"'"+(0===a||6===a?"último":"última")+"' eeee 'às' p"},yesterday:"'ontem às' p",today:"'hoje às' p",tomorrow:"'amanhã às' p",nextWeek:"eeee 'às' p",other:"P"},an={code:"pt-BR",formatDistance:function(n,e,t){var a;return t=t||{},a="string"==typeof nn[n]?nn[n]:1===e?nn[n].one:nn[n].other.replace("{{count}}",e),t.addSuffix?t.comparison>0?"em "+a:"há "+a:a},formatLong:en,formatRelative:function(n,e,t,a){var i=tn[n];return"function"==typeof i?i(e,t,a):i},localize:{ordinalNumber:function(n,e){var t=Number(n),a=String((e||{}).unit);return"week"===a||"isoWeek"===a?t+"ª":t+"º"},era:O({values:{narrow:["AC","DC"],abbreviated:["AC","DC"],wide:["antes de cristo","depois de cristo"]},defaultWidth:"wide"}),quarter:O({values:{narrow:["1","2","3","4"],abbreviated:["T1","T2","T3","T4"],wide:["1º trimestre","2º trimestre","3º trimestre","4º trimestre"]},defaultWidth:"wide",argumentCallback:function(n){return Number(n)-1}}),month:O({values:{narrow:["j","f","m","a","m","j","j","a","s","o","n","d"],abbreviated:["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez"],wide:["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"]},defaultWidth:"wide"}),day:O({values:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sab"],abbreviated:["domingo","segunda","terça","quarta","quinta","sexta","sábado"],wide:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},defaultWidth:"wide"}),dayPeriod:O({values:{narrow:{am:"a",pm:"p",midnight:"mn",noon:"md",morning:"manhã",afternoon:"tarde",evening:"tarde",night:"noite"},abbreviated:{am:"AM",pm:"PM",midnight:"meia-noite",noon:"meio-dia",morning:"manhã",afternoon:"tarde",evening:"tarde",night:"noite"},wide:{am:"a.m.",pm:"p.m.",midnight:"meia-noite",noon:"meio-dia",morning:"manhã",afternoon:"tarde",evening:"tarde",night:"noite"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mn",noon:"md",morning:"da manhã",afternoon:"da tarde",evening:"da tarde",night:"da noite"},abbreviated:{am:"AM",pm:"PM",midnight:"meia-noite",noon:"meio-dia",morning:"da manhã",afternoon:"da tarde",evening:"da tarde",night:"da noite"},wide:{am:"a.m.",pm:"p.m.",midnight:"meia-noite",noon:"meio-dia",morning:"da manhã",afternoon:"da tarde",evening:"da tarde",night:"da noite"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:R({matchPattern:/^(\d+)[ºªo]?/i,parsePattern:/\d+/i,valueCallback:function(n){return parseInt(n,10)}}),era:H({matchPatterns:{narrow:/^(ac|dc|a|d)/i,abbreviated:/^(a\.?\s?c\.?|d\.?\s?c\.?)/i,wide:/^(antes de cristo|depois de cristo)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^ac/i,/^dc/i],wide:[/^antes de cristo/i,/^depois de cristo/i]},defaultParseWidth:"any"}),quarter:H({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^T[1234]/i,wide:/^[1234](º)? trimestre/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(n){return n+1}}),month:H({matchPatterns:{narrow:/^[jfmajsond]/i,abbreviated:/^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,wide:/^(janeiro|fevereiro|março|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^fev/i,/^mar/i,/^abr/i,/^mai/i,/^jun/i,/^jul/i,/^ago/i,/^set/i,/^out/i,/^nov/i,/^dez/i]},defaultParseWidth:"any"}),day:H({matchPatterns:{narrow:/^(dom|[23456]ª?|s[aá]b)/i,short:/^(dom|[23456]ª?|s[aá]b)/i,abbreviated:/^(dom|seg|ter|qua|qui|sex|s[aá]b)/i,wide:/^(domingo|(segunda|ter[cç]a|quarta|quinta|sexta)([- ]feira)?|s[aá]bado)/i},defaultMatchWidth:"wide",parsePatterns:{short:[/^d/i,/^2/i,/^3/i,/^4/i,/^5/i,/^6/i,/^s[aá]/i],narrow:[/^d/i,/^2/i,/^3/i,/^4/i,/^5/i,/^6/i,/^s[aá]/i],any:[/^d/i,/^seg/i,/^t/i,/^qua/i,/^qui/i,/^sex/i,/^s[aá]b/i]},defaultParseWidth:"any"}),dayPeriod:H({matchPatterns:{narrow:/^(a|p|mn|md|(da) (manhã|tarde|noite))/i,any:/^([ap]\.?\s?m\.?|meia[-\s]noite|meio[-\s]dia|(da) (manhã|tarde|noite))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mn|^meia[-\s]noite/i,noon:/^md|^meio[-\s]dia/i,morning:/manhã/i,afternoon:/tarde/i,evening:/tarde/i,night:/noite/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};const rn=an;function on(n,e,t){const a=h("button","Nova tarefa");a.addEventListener("click",(()=>g(M(n,e,t))));const i=w();i.addEventListener("click",(()=>{g(dn(e,t))}));const r=x(e),o=y();o.appendChild(i),o.appendChild(r),o.appendChild(a);const s=function(n,e,t){const a=document.createElement("h2");a.innerText=n.nome;const i=document.createElement("p");i.innerText=n.descricao;const r=document.createElement("div");r.classList.add("listagem-tarefas"),n.tarefas.map((a=>{r.appendChild(function(n,e,t,a){const i=document.createElement("p");if(i.classList.add("nome-tarefa"),i.innerText=n.titulo,1===n.prioridade){const n=C(["bi","bi-exclamation-diamond"]);n.setAttribute("title","Urgente"),i.append(n)}const r=document.createElement("p");r.classList.add("data-tarefa");const o=document.createElement("div");o.classList.add("texto"),o.appendChild(i),o.appendChild(r);const s=document.createElement("i"),d=h("button","");d.addEventListener("click",(()=>{for(let i=0;i<t.length;i++)if(t[i].username===a[0].username)for(let r=0;r<t[i].listas.length;r++)if(t[i].listas[r].criadaEm===e.criadaEm)for(let e=0;e<t[i].listas[r].tarefas.length;e++)t[i].listas[r].tarefas[e].criadaEm===n.criadaEm&&(t[i].listas[r].tarefas[e].concluida=!n.concluida,a.pop(),a.push(t[i]),g(on(t[i].listas[r],t,a)))}));const c=document.createElement("div");return n.concluida?(c.classList.add("concluida"),s.classList.add("bi","bi-check2-square"),d.appendChild(s),d.setAttribute("title","Marcar como não concluida"),r.innerText="Concluida"):(s.classList.add("bi","bi-square"),d.appendChild(s),d.setAttribute("title","Marcar como concluida"),r.innerText=function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};j(2,arguments);var a=t.locale||Q;if(!a.formatDistance)throw new RangeError("locale must contain formatDistance property");var i=L(n,e);if(isNaN(i))throw new RangeError("Invalid time value");var r,o,s=$(t);s.addSuffix=Boolean(t.addSuffix),s.comparison=i,i>0?(r=k(e),o=k(n)):(r=k(n),o=k(e));var d,c=z(o,r),l=(_(o)-_(r))/1e3,u=Math.round((c-l)/60);if(u<2)return t.includeSeconds?c<5?a.formatDistance("lessThanXSeconds",5,s):c<10?a.formatDistance("lessThanXSeconds",10,s):c<20?a.formatDistance("lessThanXSeconds",20,s):c<40?a.formatDistance("halfAMinute",null,s):c<60?a.formatDistance("lessThanXMinutes",1,s):a.formatDistance("xMinutes",1,s):0===u?a.formatDistance("lessThanXMinutes",1,s):a.formatDistance("xMinutes",u,s);if(u<45)return a.formatDistance("xMinutes",u,s);if(u<90)return a.formatDistance("aboutXHours",1,s);if(u<G){var m=Math.round(u/60);return a.formatDistance("aboutXHours",m,s)}if(u<2520)return a.formatDistance("xDays",1,s);if(u<K){var A=Math.round(u/G);return a.formatDistance("xDays",A,s)}if(u<86400)return d=Math.round(u/K),a.formatDistance("aboutXMonths",d,s);if((d=q(o,r))<12){var f=Math.round(u/K);return a.formatDistance("xMonths",f,s)}var p=d%12,h=Math.floor(d/12);return p<3?a.formatDistance("aboutXYears",h,s):p<9?a.formatDistance("overXYears",h,s):a.formatDistance("almostXYears",h+1,s)}(n.dataConclusao,new Date,{locale:rn,addSuffix:!0})),c.classList.add("tarefa"),c.appendChild(d),c.appendChild(o),c}(a,n,e,t))}));const o=document.createElement("div");return o.appendChild(a),o.appendChild(i),o.appendChild(r),o}(n,e,t);s.classList.add("tarefas");const d=document.createElement("div");d.classList.add("card"),d.appendChild(s);const c=document.createElement("div");c.classList.add("conteudo"),c.appendChild(d);const l=document.createElement("section");return l.setAttribute("id","paginaVerLista"),l.appendChild(o),l.appendChild(c),l}const sn=on,dn=function n(e,t){const a=C(["bi","bi-plus"]),i=h("button","");i.setAttribute("title","Nova lista"),i.appendChild(a),i.addEventListener("click",(()=>{g(function(n,e){const t=h("submit","Salvar"),a=v("Nova lista");a.appendChild(t),a.addEventListener("submit",(t=>{t.preventDefault();const i=new B(a["nome-lista"].value,a["descricao-lista"].value);for(let t=0;t<n.length;t++)n[t].username===e[0].username&&(n[t].listas.push(i),e.pop(),e.push(n[t]),g(dn(n,e)))}));const i=document.createElement("div");i.classList.add("card"),i.appendChild(a);const r=document.createElement("div");r.classList.add("conteudo"),r.appendChild(i);const o=w();o.addEventListener("click",(()=>{g(dn(n,e))}));const s=x(n),d=y();d.appendChild(o),d.appendChild(s);const c=document.createElement("section");return c.setAttribute("id","paginaNovaLista"),c.appendChild(d),c.appendChild(r),c}(e,t))}));const r=y();r.appendChild(i),r.appendChild(x(e));const o=document.createElement("div");o.classList.add("listas"),t[0].listas.map((a=>{const i=C(["bi","bi-eye"]),r=h("button","");r.setAttribute("title","Visualizar lista"),r.appendChild(i),r.addEventListener("click",(()=>function(n){g(sn(n,e,t))}(a)));const s=C(["bi","bi-pen"]),d=h("button","");d.setAttribute("title","Editar lista"),d.appendChild(s),d.addEventListener("click",(()=>{g(function(n,e,t){const a=w();a.addEventListener("click",(()=>{g(dn(e,t))}));const i=x(e),r=y();r.appendChild(a),r.appendChild(i);const o=h("submit","Atualizar"),s=v("Editar lista");s.appendChild(o),s.addEventListener("submit",(a=>{a.preventDefault();for(let a=0;a<e.length;a++)if(e[a].username===t[0].username)for(let i=0;i<e[a].listas.length;i++)e[a].listas[i].criadaEm===n.criadaEm&&(e[a].listas[i].nome=s["nome-lista"].value,e[a].listas[i].descricao=s["descricao-lista"].value,t.pop(),t.push(e[a]),g(dn(e,t)))})),s["nome-lista"].value=n.nome,s["descricao-lista"].value=n.descricao;const d=document.createElement("div");d.classList.add("card"),d.appendChild(s);const c=document.createElement("div");c.classList.add("conteudo"),c.appendChild(d);const l=document.createElement("section");return l.setAttribute("id","paginaEditarLista"),l.appendChild(r),l.appendChild(c),l}(a,e,t))}));const c=C(["bi","bi-trash"]),l=h("button","");l.setAttribute("title","Apagar lista"),l.appendChild(c),l.addEventListener("click",(()=>function(a){for(let i=0;i<e.length;i++)e[i].username===t[0].username&&(e[i].listas=e[i].listas.filter((n=>n.criadaEm!==a)),t.pop(),t.push(e[i]),g(n(e,t)))}(a.criadaEm)));const u=document.createElement("div");u.classList.add("botoes"),u.appendChild(r),u.appendChild(d),u.appendChild(l);const m=function(n){const e=document.createElement("div");e.classList.add("card");const t=document.createElement("h3");t.innerText=n.nome;const a=document.createElement("p");a.innerText=n.descricao;const i=document.createElement("p");1===n.tarefas.length?i.innerText=`${n.tarefas.length} tarefa`:i.innerText=`${n.tarefas.length} tarefas`;const r=document.createElement("div");return r.classList.add("conteudo"),r.appendChild(t),r.appendChild(i),r.appendChild(a),e.appendChild(r),e}(a);m.appendChild(u),o.appendChild(m)}));const s=document.createElement("section");return s.setAttribute("id","paginaInicial"),s.appendChild(r),s.appendChild(o),s};function cn(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}const ln=function(n){const e=[],t=document.createElement("h2");t.innerText="Entrar";const a=document.createElement("a");a.setAttribute("href","#"),a.innerText="Cadastre-se",a.addEventListener("click",(e=>{g(function(n){const e=[],t=document.createElement("h2");t.innerText="Criar conta";let a="Os dados ficam salvos apenas localmente no seu dispositivo, ";a+="mesmo assim recomendados que utilize uma senha que não use em outras contas";const i=p("Confirmação de senha","password","formSenha2","Os dados ficam salvos apenas localmente no seu dispositivo, mesmo assim recomendados que utilize uma senha que não use em outras contas",[["minlength","8"],["required","true"]]),r=b();r.appendChild(i),r.addEventListener("submit",(t=>function(t){t.preventDefault();const a=document.getElementById("formUsuario").value,i=document.getElementById("formSenha").value,r=document.getElementById("formSenha2").value,o=document.getElementById("campoMsgForm");if(n.some((n=>n.usuario===a))){o.hasChildNodes()&&o.removeChild(o.children[0]);const n=E("Esse nome de usuário já está em uso","aviso");o.appendChild(n)}else if(i!==r){o.hasChildNodes()&&o.removeChild(o.children[0]);const n=E("As senhas não correspondem","aviso");o.appendChild(n)}else{const t=function(n,e){j(2,arguments);var t=k(n),a=cn(e);return isNaN(a)?new Date(NaN):a?(t.setDate(t.getDate()+a),t):t}(new Date,7),r=new W("Tarefa 1",t),o=new B("Minhas tarefas");o.tarefas.push(r);const s=new class{#e;constructor(n,e){this.usuario=n,this.listas=[],this.#e=e}mudarSenha(n,e){n===this.#e&&(this.#e=e)}login(n){return n===this.#e}}(a,i);s.listas.push(o),n.push(s),e.push(s),g(dn(n,e))}}(t)));const o=document.createElement("a");o.setAttribute("href","#"),o.innerText="Faça login",o.addEventListener("click",(()=>{g(ln(n))}));const s=document.createElement("p");s.innerText="Já possui conta? ",s.appendChild(o),r.appendChild(s);const d=h("submit","Cadastrar-se");r.appendChild(d);const c=document.createElement("div");c.classList.add("card"),c.appendChild(t),c.appendChild(r);const l=document.createElement("section");return l.setAttribute("id","paginaCadastro"),l.appendChild(c),l}(n))}));const i=document.createElement("p");i.innerText="Não possui conta? ",i.appendChild(a);const r=h("submit","Entrar"),o=b();o.appendChild(i),o.appendChild(r),o.addEventListener("submit",(t=>function(t){t.preventDefault();const a=document.getElementById("formUsuario").value,i=document.getElementById("formSenha").value;if(n.some((n=>n.usuario===a&&n.login(i))))e.push(...n.filter((n=>n.usuario===a))),g(dn(n,e));else{const n=document.getElementById("campoMsgForm");n.hasChildNodes()&&n.removeChild(n.children[0]);const e=E("Credenciais inválidas","erro");n.appendChild(e)}}(t)));const s=document.createElement("div");s.classList.add("card"),s.appendChild(t),s.appendChild(o);const d=document.createElement("section");return d.setAttribute("id","paginaLogin"),d.appendChild(s),d};document.getElementById("content").appendChild(ln([]))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,